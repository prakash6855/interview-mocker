// src/config.js
export const config = {
  javascript: [
    "what is JS and what is the role of JS engine",
    "what is client side and server side?",
    "what are scope in JS?",
    "What are types of variables in JS when it is declared  without using the var let and const keywords?",
    "What is hosting?",
    "What is Json?",
    "What are data types?",
    "What are the difference between primitive and non primitive data types?",
    "What are the difference between null and undefined?",
    "What is the use of type of operator?",
    "Define type coercion in JS?",
    "What is operator precedence?",
    "What are difference between unary binary and ternary operators?",
    "What is short circuit evaluation in JS?",
    "What are operator precedence?",
    "What are types of conditional statements in JS?",
    "What are difference between == and === operator?",
    "What is the difference between spread and rest operator in JS?",
    "What are Arrays in JS? How to add, get and remove elements from arrays?",
    "What is the indexOf () method of the array?",
    "What is the difference between find and filter methods of an array?",
    "What is the slice methods of an array?",
    "What are the difference between push and concat method of an array?",
    "What is the difference between pop and shift methods of an array?",
    "What is the splice methods of an array?",
    "What is the difference between slice and splice methods of an array?",
    "What is the difference between map and for each array methods of an array?",
    "How to sort and reverse an array?",
    "What is array destructuring in JS?",
    "What are array like objects in JS?",
    "How to convert an array like objects into an array?",
    "What is a loop? What are the types of loops in JS?",
    "What are the difference between while and for loops?",
    "What are the difference between while and do while loops?",
    "What are the difference between break and continue statements?",
    "What is the difference between for and for of loop in JS?",
    "What is the difference between for of and for in loop in JS?",
    "What is for each method? Compare it with four of and for in loop?",
    "When to use for of and when to use for each method in applications?",
    "What are functions in JS? What are the types of functions?",
    "What are the difference between named and anonymous functions?",
    "What are the function expressions in JS?",
    "What are Arrow functions in JS? What is its use?",
    "What is callback functions and what are the uses?",
    "What is higher order functions in JS?",
    "What is the difference between arguments and parameters?",
    "How many ways you can pass arguments to a functions?",
    "How do you use default parameters in a function?",
    "What is the use of event handling in JS?",
    "What is first order class functions in JS?",
    "What are pure and impure functions in JS?",
    "What is function currying in JS?",
    "What are call ,apply and bind methods in JS?",
    "Define closure in JS?",
    "What is string?",
    "How is template literals and string interpolation in strings?",
    "What are some of the most important string method in JS?",
    "What is string immutability?",
    "In how many ways you can concatenate strings?",
    "What is DOM? What is the difference between HTML and DOM?",
    "How do you select, modify, create and remove dom elements?",
    "what are selectors in JS?",
    "What is the difference between get element by ID get element by class name and get element by tag name",
    "What are the difference between query selector and query selector all?",
    "What are the methods of modify elements, properties and attributes?",
    "What is the difference between inner HTML and text content?",
    "How to add and remove properties of HTML elements in the Dom using JS?",
    "How to add and remove style on HTML elements in Dom using JS?",
    "How to create new elements in Dom using JS? What is the difference between create element and clone node?",
    "What is the difference between create element and create text node?",
    "What is error handling in JS?",
    "What is the role of finally block in JS?",
    "What is the purpose of the throw statement in JS?",
    "What is error propagation in JS?",
    "What are the best practices for error handling?",
    "What are different types of errors in JS?",
    "What are objects in JS?",
    "In how many ways you can create an object?",
    "What is the difference between an array and an object?",
    "How to add, modify and delete properties of an object?",
    "Explain the difference between bracket and dot notation?",
    "What are some common methods to iterate over the properties of an object?",
    "How do you check if a property exists in an object?",
    "How do you clone or copy and object?",
    "What is the difference between deep copy and shallow copy in JS?",
    "What is set object in JS?",
    "What is map object in JS?",
    "What is the difference between map and object in JS?",
    "What are events? How are they triggered?",
    "What are the types of events in JS?",
    "What is event object in JS?",
    "What is event delegation in JS?",
    "What is event bubbling in JS?",
    "How can you stop event propagation or event bubbling in JS?",
    "What is event capturing in JS?",
    "What is the purpose of event. prevent default method in JS?",
    "What is the use of this keyword in the context of event handling in JS?",
    "How to remove an event handler from an element in JS?",
    "Define promises with an example",
    "Define async await with an  example",
    "Define event loop in javascript",
  ],
  // javascript: [
  //   //https://github.com/yangshun/top-javascript-interview-questions
  //   "Explain the concept of hoisting in JavaScript",
  //   "What are the differences between JavaScript variables created using `let`, `var` or `const`?",
  //   "What is the difference between `==` and `===` in JavaScript?",
  //   "What is the event loop in JavaScript runtimes?",
  //   "Explain event delegation in JavaScript",
  //   "Explain how `this` works in JavaScript",
  //   "Describe the difference between a cookie, `sessionStorage` and `localStorage` in browsers",
  //   "Describe the difference between `<script>`, `<script async>` and `<script defer>`",
  //   "What's the difference between a JavaScript variable that is: `null`, `undefined` or undeclared?",
  //   "What's the difference between `.call` and `.apply` in JavaScript?",
  //   "Explain `Function.prototype.bind` in JavaScript",
  //   "What advantage is there for using the JavaScript arrow syntax for a method in a constructor?",
  //   "Explain how prototypal inheritance works in JavaScript",
  //   "Difference between: `function Person(){}`, `const person = Person()`, and `const person = new Person()` in JavaScript?",
  //   "Explain the differences on the usage of `foo` between `function foo() {}` and `var foo = function() {}` in JavaScript",
  //   "What's a typical use case for anonymous functions in JavaScript?",
  //   "What are the various ways to create objects in JavaScript?",
  //   "What is a closure in JavaScript, and how/why would you use one?",
  //   "What is the definition of a higher-order function in JavaScript?",
  //   "What are the differences between JavaScript ES2015 classes and ES5 function constructors?",
  //   "Describe event bubbling in JavaScript and browsers",
  //   "Describe event capturing in JavaScript and browsers",
  //   "What is the difference between `mouseenter` and `mouseover` event in JavaScript and browsers?",
  //   "What is `'use strict';` in JavaScript for?",
  //   "Explain the difference between synchronous and asynchronous functions in JavaScript",
  //   "What are the pros and cons of using Promises instead of callbacks in JavaScript?",
  //   "Explain AJAX in as much detail as possible",
  //   "What are the advantages and disadvantages of using AJAX?",
  //   "What are the differences between `XMLHttpRequest` and `fetch()` in JavaScript and browsers?",
  //   "How do you abort a web request using `AbortController` in JavaScript?",
  //   "What are JavaScript polyfills for?",
  //   "Why is extending built-in JavaScript objects not a good idea?",
  //   "Why is it, in general, a good idea to leave the global JavaScript scope of a website as-is and never touch it?",
  //   "Explain the differences between CommonJS modules and ES modules in JavaScript",
  //   "What are the various data types in JavaScript?",
  //   "What language constructs do you use for iterating over object properties and array items in JavaScript?",
  //   "What are the benefits of using spread syntax in JavaScript and how is it different from rest syntax?",
  //   "What are iterators and generators in JavaScript and what are they used for?",
  //   "Explain the difference between mutable and immutable objects in JavaScript",
  //   "What is the difference between a `Map` object and a plain object in JavaScript?",
  //   "What are the differences between `Map`/`Set` and `WeakMap`/`WeakSet` in JavaScript?",
  //   "Why might you want to create static class members in JavaScript?",
  //   "What are `Symbol`s used for in JavaScript?",
  //   "What are server-sent events?",
  //   "What are JavaScript object property flags and descriptors?",
  //   "What are JavaScript object getters and setters for?",
  //   "What are proxies in JavaScript used for?",
  //   "What tools and techniques do you use for debugging JavaScript code?",
  //   "What are workers in JavaScript used for?",
  //   "How does JavaScript garbage collection work?",
  //   "What are the various data types in JavaScript?",
  //   "How do you check the data type of a variable?",
  //   "What's the difference between a JavaScript variable that is: `null`, `undefined` or undeclared?",
  //   "What are the differences between JavaScript variables created using `let`, `var` or `const`?",
  //   "Why is it, in general, a good idea to leave the global JavaScript scope of a website as-is and never touch it?",
  //   "How do you convert a string to a number in JavaScript?",
  //   "What are template literals and how are they used?",
  //   "Explain the concept of tagged templates",
  //   "What is the spread operator and how is it used?",
  //   "What are `Symbol`s used for in JavaScript?",
  //   "What are proxies in JavaScript used for?",
  //   "Explain the concept of hoisting in JavaScript",
  //   "Explain the difference in hoisting between `var`, `let`, and `const`",
  //   "How does hoisting affect function declarations and expressions?",
  //   "What are the potential issues caused by hoisting?",
  //   "How can you avoid problems related to hoisting?",
  //   "What is the difference between `==` and `===` in JavaScript?",
  //   "What language constructs do you use for iterating over object properties and array items in JavaScript?",
  //   "What is the purpose of the `break` and `continue` statements?",
  //   "What is the ternary operator and how is it used?",
  //   "How do you access the index of an element in an array during iteration?",
  //   "What is the purpose of the `switch` statement?",
  //   "What are rest parameters and how are they used?",
  //   "Explain the concept of the spread operator and its uses",
  //   "What are the benefits of using spread syntax in JavaScript and how is it different from rest syntax?",
  //   "What are iterators and generators in JavaScript and what are they used for?",
  //   "Explain the differences on the usage of `foo` between `function foo() {}` and `var foo = function() {}` in JavaScript",
  //   "What is the difference between a parameter and an argument?",
  //   "Explain the concept of hoisting with regards to functions",
  //   "What's the difference between `.call` and `.apply` in JavaScript?",
  //   "Can you offer a use case for the new arrow => function syntax?",
  //   "Difference between: `function Person(){}`, `const person = Person()`, and `const person = new Person()` in JavaScript?",
  //   "What is the definition of a higher-order function in JavaScript?",
  //   "What are callback functions and how are they used?",
  //   "What's a typical use case for anonymous functions in JavaScript?",
  //   "What is recursion and how is it used in JavaScript?",
  //   "What are default parameters and how are they used?",
  //   "Explain why the following doesn't work as an IIFE: `function foo(){ }();`. What needs to be changed to properly make it an IIFE?",
  //   "What are the various ways to create objects in JavaScript?",
  //   "Explain the difference between dot notation and bracket notation for accessing object properties",
  //   "What are the different methods for iterating over an array?",
  //   "How do you add, remove, and update elements in an array?",
  //   "What are the different ways to copy an object or an array?",
  //   "Explain the difference between shallow copy and deep copy",
  //   "What are the advantages of using the spread operator with arrays and objects?",
  //   "How do you check if an object has a specific property?",
  //   "Explain the difference between mutable and immutable objects in JavaScript",
  //   "Explain the concept of destructuring assignment for objects and arrays",
  //   "What is `Object.freeze()` for?",
  //   "What is `Object.seal()` for?",
  //   "What is `Object.preventExtensions()` for?",
  //   "What are JavaScript object getters and setters for?",
  //   "What are JavaScript object property flags and descriptors?",
  //   "How do you reliably determine whether an object is empty?",
  //   "What is the event loop in JavaScript runtimes?",
  //   "Explain the difference between synchronous and asynchronous functions in JavaScript",
  //   "Explain the concept of a callback function in asynchronous operations",
  //   "What are Promises and how do they work?",
  //   "Explain the different states of a Promise",
  //   "What are the pros and cons of using Promises instead of callbacks in JavaScript?",
  //   "What is the use of `Promise.all()`",
  //   "How is `Promise.all()` different from `Promise.allSettled()`?",
  //   "What is async/await and how does it simplify asynchronous code?",
  //   "How do you handle errors in asynchronous operations?",
  //   "Explain the concept of a microtask queue",
  //   "What is the difference between `setTimeout()`, `setImmediate()`, and `process.nextTick()`?",
  //   "Explain how prototypal inheritance works in JavaScript",
  //   "What is the prototype chain and how does it work?",
  //   "Explain the difference between classical inheritance and prototypal inheritance",
  //   "Explain the concept of inheritance in ES2015 classes",
  //   "What is the purpose of the `new` keyword?",
  //   "How do you create a constructor function?",
  //   "What are the differences between JavaScript ES2015 classes and ES5 function constructors?",
  //   "What advantage is there for using the JavaScript arrow syntax for a method in a constructor?",
  //   "Why might you want to create static class members in JavaScript?",
  //   "What is a closure in JavaScript, and how/why would you use one?",
  //   "Explain the concept of lexical scoping",
  //   "Explain the concept of scope in JavaScript",
  //   "How can closures be used to create private variables?",
  //   "What are the potential pitfalls of using closures?",
  //   "Explain the difference between global scope, function scope, and block scope",
  //   "Explain how `this` works in JavaScript",
  //   "Explain `Function.prototype.bind` in JavaScript",
  //   "Explain the different ways the `this` keyword can be bound",
  //   "What are the common pitfalls of using the `this` keyword?",
  //   "Explain the concept of `this` binding in event handlers",
  //   "What is the DOM and how is it structured?",
  //   "What's the difference between an attribute and a property in the DOM?",
  //   "Explain the difference between `document.querySelector()` and `document.getElementById()`",
  //   "How do you add, remove, and modify HTML elements using JavaScript?",
  //   "What are event listeners and how are they used?",
  //   "Explain the event phases in a browser",
  //   "Describe event bubbling in JavaScript and browsers",
  //   "Describe event capturing in JavaScript and browsers",
  //   "Explain event delegation in JavaScript",
  //   "How do you prevent the default behavior of an event?",
  //   "What is the difference between `event.preventDefault()` and `event.stopPropagation()`?",
  //   "What is the difference between `mouseenter` and `mouseover` event in JavaScript and browsers?",
  //   "What is the difference between `innerHTML` and `textContent`?",
  //   "How do you manipulate CSS styles using JavaScript?",
  //   "Describe the difference between `<script>`, `<script async>` and `<script defer>`",
  //   "What is the difference between the Window object and the Document object?",
  //   "Describe the difference between a cookie, `sessionStorage` and `localStorage` in browsers",
  //   "How do you make an HTTP request using the Fetch API?",
  //   "What are the different ways to make an API call in JavaScript?",
  //   "Explain AJAX in as much detail as possible",
  //   "What are the advantages and disadvantages of using AJAX?",
  //   "What are the differences between `XMLHttpRequest` and `fetch()` in JavaScript and browsers?",
  //   "How do you abort a web request using `AbortController` in JavaScript?",
  //   "Explain how JSONP works (and how it's not really Ajax)",
  //   "What are workers in JavaScript used for?",
  //   "Explain the concept of the Web Socket API",
  //   "What are JavaScript polyfills for?",
  //   "How do you detect if JavaScript is disabled on a page?",
  //   "What is the `Intl` namespace object for?",
  //   "How do you validate form elements using the Constraint Validation API?",
  //   "How do you use `window.history` API?",
  //   "How do `<iframe>` on a page communicate?",
  //   "Difference between document `load` event and document `DOMContentLoaded` event?",
  //   "How do you redirect to a new page in JavaScript?",
  //   "How do you get the query string values of the current page in JavaScript?",
  //   "What are server-sent events?",
  //   "What are Progressive Web Applications (PWAs)?",
  //   "What are modules and why are they useful?",
  //   "Explain the differences between CommonJS modules and ES modules in JavaScript",
  //   "How do you import and export modules in JavaScript?",
  //   "What are the benefits of using a module bundler?",
  //   "Explain the concept of tree shaking in module bundling",
  //   "What are the metadata fields of a module?",
  //   "What do you think of AMD vs CommonJS?",
  //   "What are the different types of errors in JavaScript?",
  //   "How do you handle errors using `try...catch` blocks?",
  //   "What is the purpose of the `finally` block?",
  //   "How can you create custom error objects?",
  //   "Explain the concept of error propagation in JavaScript",
  //   "What is currying and how does it work?",
  //   "Explain the concept of partial application",
  //   "What are the benefits of using currying and partial application?",
  //   "Provide some examples of how currying and partial application can be used",
  //   "How do currying and partial application differ from each other?",
  //   "What are `Set`s and `Map`s and how are they used?",
  //   "What are the differences between `Map`/`Set` and `WeakMap`/`WeakSet` in JavaScript?",
  //   "How do you convert a `Set` to an array in JavaScript?",
  //   "What is the difference between a `Map` object and a plain object in JavaScript?",
  //   "How do `Set`s and `Map`s handle equality checks for objects?",
  //   "What are some common performance bottlenecks in JavaScript applications?",
  //   "Explain the concept of debouncing and throttling",
  //   "How can you optimize DOM manipulation for better performance?",
  //   "What are some techniques for reducing reflows and repaints?",
  //   "Explain the concept of lazy loading and how it can improve performance",
  //   "What are Web Workers and how can they be used to improve performance?",
  //   "Explain the concept of caching and how it can be used to improve performance",
  //   "What are some tools that can be used to measure and analyze JavaScript performance?",
  //   "How can you optimize network requests for better performance?",
  //   "What are the different types of testing in software development?",
  //   "Explain the difference between unit testing, integration testing, and end-to-end testing",
  //   "What are some popular JavaScript testing frameworks?",
  //   "How do you write unit tests for JavaScript code?",
  //   "Explain the concept of test-driven development (TDD)",
  //   "What are mocks and stubs and how are they used in testing?",
  //   "How can you test asynchronous code in JavaScript?",
  //   "What are some best practices for writing maintainable and effective tests in JavaScript?",
  //   "Explain the concept of code coverage and how it can be used to assess test quality",
  //   "What are some tools that can be used for JavaScript testing?",
  //   "What are design patterns and why are they useful?",
  //   "Explain the concept of the Singleton pattern",
  //   "What is the Factory pattern and how is it used?",
  //   "Explain the Observer pattern and its use cases",
  //   "What is the Module pattern and how does it help with encapsulation?",
  //   "Explain the concept of the Prototype pattern",
  //   "What is the Decorator pattern and how is it used?",
  //   "Explain the concept of the Strategy pattern",
  //   "What is the Command pattern and how is it used?",
  //   "Why is extending built-in JavaScript objects not a good idea?",
  //   "What is Cross-Site Scripting (XSS) and how can you prevent it?",
  //   "Explain the concept of Cross-Site Request Forgery (CSRF) and its mitigation techniques",
  //   "How can you prevent SQL injection vulnerabilities in JavaScript applications?",
  //   "What are some best practices for handling sensitive data in JavaScript?",
  //   "Explain the concept of Content Security Policy (CSP) and how it enhances security",
  //   "What are some common security headers and their purpose?",
  //   "How can you prevent clickjacking attacks?",
  //   "Explain the concept of input validation and its importance in security",
  //   "What are some tools and techniques for identifying security vulnerabilities in JavaScript code?",
  //   "How can you implement secure authentication and authorization in JavaScript applications?",
  //   "Explain the same-origin policy with regards to JavaScript",
  //   "What is `'use strict';` in JavaScript for?",
  //   "What tools and techniques do you use for debugging JavaScript code?",
  //   "How does JavaScript garbage collection work?",
  //   "Explain what a single page app is and how to make one SEO-friendly",
  //   "How can you share code between JavaScript files?",
  //   "How do you organize your code?",
  //   "What are some of the advantages/disadvantages of writing JavaScript code in a language that compiles to JavaScript?",
  //   "When would you use `document.write()`?",
  // ],
  react: [
    //https://github.com/sudheerj/reactjs-interview-questions
    "What is React?",
    "What is the history behind React evolution?",
    "What are the major features of React?",
    "What is JSX?",
    "What is the difference between Element and Component?",
    "How to create components in React?",
    "When to use a Class Component over a Function Component?",
    "What are Pure Components?",
    "What is state in React?",
    "What are props in React?",
    "What is the difference between state and props?",
    "What is the difference between HTML and React event handling?",
    "What are synthetic events in React?",
    "What are inline conditional expressions?",
    "What is key prop and what is the benefit of using it in arrays of elements?",
    "What is Virtual DOM?",
    "How Virtual DOM works?",
    "What is the difference between Shadow DOM and Virtual DOM?",
    "What is React Fiber?",
    "What is the main goal of React Fiber?",
    "What are controlled components?",
    "What are uncontrolled components?",
    "What is the difference between createElement and cloneElement?",
    "What is Lifting State Up in React?",
    "What are Higher-Order components?",
    "What is children prop?",
    "How to write comments in React?",
    "What is reconciliation?",
    "Does the lazy function support named exports?",
    "Why React uses className over class attribute?",
    "What are fragments?",
    "Why fragments are better than container divs?",
    "What are portals in React?",
    "What are stateless components?",
    "What are stateful components?",
    "How to apply validation on props in React?",
    "What are the advantages of React?",
    "What are the limitations of React?",
    "What are the recommended ways for static type checking?",
    "What is the use of react-dom package?",
    "What is ReactDOMServer?",
    "How to use InnerHtml in React?",
    "How to use styles in React?",
    "How events are different in React?",
    "What is the impact of indexes as keys?",
    "How do you conditionally render components?",
    "Why we need to be careful when spreading props on DOM elements??",
    "How do you memoize a component?",
    "How you implement Server-Side Rendering or SSR?",
    "How to enable production mode in React?",
    "Do Hooks replace render props and higher order components?",
    "What is a switching component?",
    "What are React Mixins?",
    "What are the Pointer Events supported in React?",
    "Why should component names start with capital letter?",
    "Are custom DOM attributes supported in React v16?",
    "How to loop inside JSX?",
    "How do you access props in attribute quotes?",
    "What is React PropType array with shape?",
    "How to conditionally apply class attributes?",
    "What is the difference between React and ReactDOM?",
    "Why ReactDOM is separated from React?",
    "How to use React label element?",
    "How to combine multiple inline style objects?",
    "How to re-render the view when the browser is resized?",
    "How to pretty print JSON with React?",
    "Why you can't update props in React?",
    "How to focus an input element on page load?",
    "How can we find the version of React at runtime in the browser?",
    "How to add Google Analytics for react-router?",
    "How do you apply vendor prefixes to inline styles in React?",
    "How to import and export components using react and ES6?",
    "What are the exceptions on React component naming?",
    "Is it possible to use async/await in plain React?",
    "What are the common folder structures for React?",
    "What are the popular packages for animation?",
    "What is the benefit of styles modules?",
    "What are the popular React-specific linters?",
    "What is React Router?",
    "How React Router is different from history library?",
    "What are the <Router> components of React Router v6?",
    "What is the purpose of push and replace methods of history?",
    "How do you programmatically navigate using React router v4?",
    "How to get query parameters in React Router v4",
    "Why you get Router may have only one child element warning?",
    "How to pass params to history.push method in React Router v4?",
    "How to implement default or NotFound page?",
    "How to get history on React Router v4?",
    "How to perform automatic redirect after login?",
    "What is React Intl?",
    "What are the main features of React Intl?",
    "What are the two ways of formatting in React Intl?",
    "How to use FormattedMessage as placeholder using React Intl?",
    "How to access current locale with React Intl",
    "How to format date using React Intl?",
    "What is Shallow Renderer in React testing?",
    "What is TestRenderer package in React?",
    "What is the purpose of ReactTestUtils package?",
    "What is Jest?",
    "What are the advantages of Jest over Jasmine?",
    "Give a simple example of Jest test case",
    "What is Flux?",
    "What is Redux?",
    "What are the core principles of Redux?",
    "What are the downsides of Redux compared to Flux?",
    "What is the difference between mapStateToProps() and mapDispatchToProps()?",
    "Can I dispatch an action in reducer?",
    "How to access Redux store outside a component?",
    "What are the drawbacks of MVW pattern",
    "Are there any similarities between Redux and RxJS?",
    "How to reset state in Redux?",
    "What is the difference between React context and React Redux?",
    "Why are Redux state functions called reducers?",
    "How to make AJAX request in Redux?",
    "Should I keep all component's state in Redux store?",
    "What is the proper way to access Redux store?",
    "What is the difference between component and container in React Redux?",
    "What is the purpose of the constants in Redux? ",
    "What are the different ways to write mapDispatchToProps()?",
    "What is the use of the ownProps parameter in mapStateToProps() and mapDispatchToProps()?",
    "How to structure Redux top level directories?",
    "What is redux-saga?",
    "What is the mental model of redux-saga?",
    "What are the differences between call and put in redux-saga",
    "What is Redux Thunk?",
    "What are the differences between redux-saga and redux-thunk",
    "What is Redux DevTools?",
    "What are the features of Redux DevTools?",
    "What are Redux selectors and Why use them?",
    "What is Redux Form?",
    "What are the main features of Redux Form?",
    "How to add multiple middlewares to Redux?",
    "How to set initial state in Redux?",
    "How Relay is different from Redux?",
    "What is an action in Redux?",
    "What is the difference between React Native and React?",
    "How to test React Native apps?",
    "How to do logging in React Native?",
    "How to debug your React Native?",
    "What is reselect and how it works?",
    "What is Flow?",
    "What is the difference between Flow and PropTypes?",
    "How to use font-awesome icons in React?",
    "What is React Dev Tools?",
    "Why is DevTools not loading in Chrome for local files?",
    "How to use Polymer in React?",
    "What are the advantages of React over Vue.js?",
    "What is the difference between React and Angular?",
    "Why React tab is not showing up in DevTools?",
    "What are styled components?",
    "Give an example of Styled Components?",
    "What is Relay?",
    "What are the main features of reselect library?",
    "Give an example of reselect usage?",
    "Can Redux only be used with React?",
    "Do you need to have a particular build tool to use Redux?",
    "How Redux Form initialValues get updated from state?",
    "How React PropTypes allow different type for one prop?",
    "Can I import an SVG file as react component?",
    "What is render hijacking in React?",
    "How to pass numbers to React component?",
    "Do I need to keep all my state into Redux? Should I ever use react internal state?",
    "What is the purpose of registerServiceWorker in React?",
    "What is React memo function?",
    "What is React lazy function?",
    "How to prevent unnecessary updates using setState?",
    "How do you render Array, Strings and Numbers in React 16 Version?",
    "What are hooks?",
    "What rules need to be followed for hooks?",
    "How to ensure hooks followed the rules in your project?",
    "What are the differences between Flux and Redux?",
    "What are the benefits of React Router V4?",
    "Can you describe about componentDidCatch lifecycle method signature?",
    "In which scenarios do error boundaries not catch errors?",
    "What is the behavior of uncaught errors in react 16?",
    "What is the proper placement for error boundaries?",
    "What is the benefit of component stack trace from error boundary?",
    "What are default props?",
    "What is the purpose of displayName class property?",
    "What is the browser support for react applications?",
    "What is code-splitting?",
    "What are Keyed Fragments?",
    "Does React support all HTML attributes?",
    "When component props defaults to true?",
    "What is NextJS and major features of it?",
    "How do you pass an event handler to a component?",
    "How to prevent a function from being called multiple times?",
    "How JSX prevents Injection Attacks?",
    "How do you update rendered elements?",
    "How do you say that props are read only?",
    "What are the conditions to safely use the index as a key?",
    "Is it keys should be globally unique?",
    "What is the popular choice for form handling?",
    "What are the advantages of formik over redux form library?",
    "Why do you not required to use inheritance?",
    "Can I use web components in react application?",
    "What is dynamic import?",
    "What are loadable components?",
    "What is suspense component?",
    "What is route based code splitting?",
    "What is the purpose of default value in context?",
    "What is diffing algorithm?",
    "What are the rules covered by diffing algorithm?",
    "When do you need to use refs?",
    "Is it prop must be named as render for render props?",
    "What are the problems of using render props with pure components?",
    "What is windowing technique?",
    "How do you print falsy values in JSX?",
    "What is the typical use case of portals?",
    "How do you set default value for uncontrolled component?",
    "What is your favorite React stack?",
    "What is the difference between Real DOM and Virtual DOM?",
    "How to add Bootstrap to a react application?",
    "Can you list down top websites or applications using react as front end framework?",
    "Is it recommended to use CSS In JS technique in React?",
    "Do I need to rewrite all my class components with hooks?",
    "How to fetch data with React Hooks?",
    "Is Hooks cover all use cases for classes?",
    "What is the stable release for hooks support?",
    "Why do we use array destructuring (square brackets notation) in useState?",
    "What are the sources used for introducing hooks?",
    "How do you access imperative API of web components?",
    "What is formik?",
    "What are typical middleware choices for handling asynchronous calls in Redux?",
    "Do browsers understand JSX code?",
    "Describe about data flow in react?",
    "What is MobX?",
    "What are the differences between Redux and MobX?",
    "Should I learn ES6 before learning ReactJS?",
    "What is Concurrent Rendering?",
    "What is the difference between async mode and concurrent mode?",
    "Can I use javascript urls in react16.9?",
    "What is the purpose of eslint plugin for hooks?",
    "What is the difference between Imperative and Declarative in React?",
    "What are the benefits of using typescript with reactjs?",
    "How do you make sure that user remains authenticated on page refresh while using Context API State Management?",
    "What are the benefits of new JSX transform?",
    "How is the new JSX transform different from old transform?",
    "What are React Server components?",
    "What is prop drilling?",
    "What is the difference between useState and useRef hook?",
    "What is a wrapper component ",
    "What are the differences between useEffect and useLayoutEffect hooks",
    "What are the differences between Functional and Class Components ",
    "What is strict mode in React?",
    "What is the benefit of strict mode?",
    "Why does strict mode render twice in React?",
    "What are the rules of JSX?",
    "What is the reason behind multiple JSX tags to be wrapped?",
    "How do you prevent mutating array variables?",
    "What are capture phase events?",
    "How does React updates screen in an application?",
    "How does React batch multiple state updates?",
    "Is it possible to prevent automatic batching?",
    "What is React hydration?",
    "How do you update objects inside state?",
    "How do you update nested objects inside state?",
    "How do you update arrays inside state?",
    "How do you use immer library for state updates?",
    "What are the benefits of preventing the direct state mutations?",
    "What are the preferred and non-preferred array operations for updating the state?",
    "What will happen by defining nested function components?",
    "Can I use keys for non-list items?",
    "What are the guidelines to be followed for writing reducers?",
    "What is useReducer hook? Can you describe its usage?",
    "How do you compare useState and useReducer?",
    "How does context works using useContext hook?",
    "What are the use cases of useContext hook?",
    "When to use client and server components?",
    "What are the differences between page router and app router in nextjs?",
    "Why should we not update the state directly?",
    "What is the purpose of callback function as an argument of setState()?",
    "How to bind methods or event handlers in JSX callbacks?",
    "How to pass a parameter to an event handler or callback?",
    "What is the use of refs?",
    "How to create refs?",
    "What are forward refs?",
    "Which is preferred option with in callback refs and findDOMNode()?",
    "Why are String Refs legacy?",
    "What are the different phases of component lifecycle?",
    "What are the lifecycle methods of React?",
    "How to create props proxy for HOC component?",
    "What is context?",
    "What is the purpose of using super constructor with props argument?",
    "How to set state with a dynamic key name?",
    "What would be the common mistake of function being called every time the component renders?",
    "What are error boundaries in React v16",
    "How are error boundaries handled in React v15?",
    "What is the purpose of render method of react-dom?",
    "What will happen if you use setState in constructor?",
    "Is it good to use setState() in componentWillMount() method?",
    "What will happen if you use props in initial state?",
    "How you use decorators in React?",
    "What is CRA and its benefits?",
    "What is the lifecycle methods order in mounting?",
    "What are the lifecycle methods going to be deprecated in React v16?",
    "What is the purpose of getDerivedStateFromProps() lifecycle method?",
    "What is the purpose of getSnapshotBeforeUpdate() lifecycle method?",
    "What is the recommended way for naming components?",
    "What is the recommended ordering of methods in component class?",
    "Why we need to pass a function to setState()?",
    "Why is isMounted() an anti-pattern and what is the proper solution?",
    "What is the difference between constructor and getInitialState?",
    "Can you force a component to re-render without calling setState?",
    "What is the difference between super() and super(props) in React using ES6 classes?",
    "What is the difference between setState and replaceState methods?",
    "How to listen to state changes?",
    "What is the recommended approach of removing an array element in react state?",
    "Is it possible to use React without rendering HTML?",
    "What are the possible ways of updating objects in state?",
    "What are the approaches to include polyfills in your create-react-app?",
    "How to use https instead of http in create-react-app?",
    "How to avoid using relative path imports in create-react-app?",
    "How to update a component every second?",
    "Why is a component constructor called only once?",
    "How to define constants in React?",
    "How to programmatically trigger click event in React?",
    "How to make AJAX call and In which component lifecycle methods should I make an AJAX call?",
    "What are render props?",
    "How to dispatch an action on load?",
    "How to use connect from React Redux?",
    "Whats the purpose of at symbol in the redux connect decorator?",
    "How to use TypeScript in create-react-app application?",
    "Does the statics object work with ES6 classes in React?",
    "Why are inline ref callbacks or functions not recommended?",
    "What are HOC factory implementations?",
    "How to use class field declarations syntax in React classes?",
    "Why do you not need error boundaries for event handlers?",
    "What is the difference between try catch block and error boundaries?",
    "What is the required method to be defined for a class component?",
    "What are the possible return types of render method?",
    "What is the main purpose of constructor?",
    "Is it mandatory to define constructor for React component?",
    "Why should not call setState in componentWillUnmount?",
    "What is the purpose of getDerivedStateFromError?",
    "What is the methods order when component re-rendered?",
    "What are the methods invoked during error handling?",
    "What is the purpose of unmountComponentAtNode method?",
    "What are the limitations with HOCs?",
    "How to debug forwardRefs in DevTools?",
    "Is it good to use arrow functions in render methods?",
    "How do you say that state updates are merged?",
    "How do you pass arguments to an event handler?",
    "How to prevent component from rendering?",
    "Give an example on How to use context?",
    "How do you use contextType?",
    "What is a consumer?",
    "How do you solve performance corner cases while using context?",
    "What is the purpose of forward ref in HOCs?",
    "Is it ref argument available for all functions or class components?",
    "Why do you need additional care for component libraries while using forward refs?",
    "How to create react class components without ES6?",
    "Is it possible to use react without JSX?",
    "How do you create HOC using render props?",
    "What is react scripts?",
    "What are the features of create react app?",
    "What is the purpose of renderToNodeStream method?",
    "How do you get redux scaffolding using create-react-app?",
    "What is state mutation and how to prevent it?",
  ],
  html: [
    "What are semantic HTML elements?",
    "Explain the box model.",
    "What is the purpose of the head tag?",
    "How do you include external CSS and JavaScript in an HTML document?",
    "What is the difference between div and span?",
    "How do you create a form in HTML?",
    "What is the canvas element and how is it used?",
    "How do you use HTML5 to build a responsive web page?",
    "What are HTML attributes and how are they used?",
    "What is the difference between ol and ul?",
    "How do you include images in HTML?",
    "What is the purpose of the meta tag?",
    "How do you create tables in HTML?",
    "What are the different types of input elements in HTML forms?",
    "What is the iframe tag used for?",
    "How do you create a link in HTML?",
    "What are HTML entities and how are they used?",
    "What is the header element and what is its purpose?",
    "How do you use the audio and video elements?",
    "What are ARIA roles and attributes?",
    "How do you use HTML5 APIs like localStorage and sessionStorage?",
    "What is the purpose of the footer tag?",
    "How do you use HTML to create a navigation menu?",
    "What is the section tag used for?",
    "How do you define document structure using HTML5?",
    "What are the new input types introduced in HTML5?",
    "How do you use the article and aside elements?",
    "What is the main element and why is it important?",
    "How do you use the mark tag?",
    "What are the benefits of using dl for definition lists?",
    "How do you embed Google Maps in HTML?",
    "What is the button element and how is it different from input type='button'?",
    "How do you create a responsive grid layout in HTML?",
    "What is the purpose of the noscript tag?",
    "How do you use the details and summary elements?",
    "What are the different ways to include CSS in HTML?",
    "How do you use the progress element?",
    "What is the datalist element and how is it used?",
    "How do you create and use custom data attributes in HTML?",
    "What is the role of the figure and figcaption elements?",
    "How do you handle form validation in HTML5?",
    "What are the differences between HTML and XHTML?",
    "How do you include metadata in an HTML document?",
    "What is the role of the svg element in HTML?",
    "How do you create a web page layout using HTML5 semantic elements?",
    "What are the new features in HTML5 that enhance multimedia support?",
    "What is the WHATWG?",
    "What is an iframe and how it works?",
    "How do you set language in HTML?",
    "What is the DOM? How does the DOM work?",
    "How does the browser rendering engine work?",
    "What does a `<DOCTYPE html>` do?",
    "What happens when DOCTYPE is not given?",
    "What are the building blocks of HTML5?",
    "Describe the difference between a `cookie`, `sessionStorage` and `localStorage`?",
    "What are the Benefits of Server Side Rendering (SSR) Over Client Side Rendering (CSR)?",
    "What is the difference between a `<span>` and a `<div>`?",
    "Name 5 common block-level and inline HTML elements?",
    "What are semantic and non-semantic elements?",
    "What is the purpose of `main` element?",
    "Define semantic markup. What are the semantic meanings for `<section>, <article>, <aside>, <nav>, <header>, <footer>` and when/how should each be used in structuring html markup?",
    "When should you use `section`, `div` or `article`?",
    "What is Character Encoding?",
    "What is the purpose of meta tags?",
    "What does CORS stand for and what issue does it address?",
    "What does async and defer refer in script tag? Describe the difference between `<script>`, `<script async>` and `<script defer>`",
    "Ways to improve website performance",
    "Comparison of browsers engines like Chrome, Firefox, Internet explorer, Safari?",
    "What are `data-` attributes good for?",
    "Explain the difference between layout, painting and compositing?",
    "Explain about HTML Layout Engines used by browsers?",
  ],
  css: [
    "What is Flexbox?",
    "Explain CSS Grid.",
    "What is the CSS box model?",
    "How do you center elements in CSS?",
    "What are pseudo-classes and pseudo-elements?",
    "How do you use CSS animations and transitions?",
    "What are media queries and how are they used?",
    "What is the difference between class and id selectors?",
    "How do you use CSS variables (custom properties)?",
    "What is the purpose of the display property?",
    "How do you implement responsive design in CSS?",
    "What are CSS preprocessors and how do they work?",
    "What is the difference between absolute, relative, fixed, and sticky positioning?",
    "How do you create a grid layout with CSS Grid?",
    "What are CSS Flexbox properties and how are they used?",
    "How do you style form elements in CSS?",
    "What is the :root pseudo-class?",
    "How do you implement a responsive typography system?",
    "What is the purpose of the z-index property?",
    "How do you create CSS hover effects?",
    "What are CSS transitions and how do you use them?",
    "How do you use @keyframes for animations?",
    "What is the purpose of the opacity property?",
    "How do you use CSS to hide elements visually but keep them accessible to screen readers?",
    "What are CSS Grid areas and how are they used?",
    "How do you create multi-column layouts with CSS?",
    "What are CSS filters and how are they used?",
    "How do you use the calc() function in CSS?",
    "What is the box-sizing property and why is it important?",
    "How do you style HTML tables with CSS?",
    "What is the transform property and how is it used?",
    "How do you use the :nth-child selector?",
    "What are CSS specificity rules?",
    "How do you handle cross-browser compatibility issues in CSS?",
    "What are CSS custom properties and how are they different from preprocessor variables?",
    "How do you create a CSS grid-based layout?",
    "What is the difference between a block-level element and an inline element?",
    "How do you use CSS to create a sticky header?",
    "What is the role of the @media rule in responsive design?",
    "How do you use CSS to create accessible and user-friendly designs?",
    "What are CSS pseudo-elements and how are they used?",
    "How do you use the :focus and :active pseudo-classes?",
    "What is the purpose of the content property in CSS?",
    "How do you create a CSS-only dropdown menu?",
    "What is the purpose of the font-family property?",
    "How do you use CSS to create a print-friendly stylesheet?",
    "What are some best practices for writing maintainable CSS?",
    "What is CSS selector specificity and how does it work?",
    "What's the difference between 'resetting' and 'normalizing' CSS? Which would you choose, and why?",
    "Describe floats and how they work.",
    "Describe z-index and how stacking context is formed.",
    "Describe Block Formatting Context (BFC) and how it works.",
    "What are the various clearing techniques and which is appropriate for what context?",
    "Explain CSS sprites, and how you would implement them on a page or site.",
    "How would you approach fixing browser-specific styling issues?",
    "How do you serve your pages for feature-constrained browsers? What techniques/processes do you use?",
    "What are the different ways to visually hide content (and make it available only for screen readers)?",
    "Have you ever used a grid system, and if so, what do you prefer?",
    "Have you used or implemented media queries or mobile-specific layouts/CSS?",
    "Are you familiar with styling SVG?",
    "Can you give an example of an @media property other than screen?",
    "What are some of the 'gotchas' for writing efficient CSS?",
    "What are the advantages/disadvantages of using CSS preprocessors?",
    "Describe what you like and dislike about the CSS preprocessors you have used.",
    "How would you implement a web design comp that uses non-standard fonts?",
    "Explain how a browser determines what elements match a CSS selector.",
    "Describe pseudo-elements and discuss what they are used for.",
    "Explain your understanding of the box model and how you would tell the browser in CSS to render your layout in different box models.",
    "What does * { box-sizing: border-box; } do? What are its advantages?",
    "What is the CSS display property and can you give a few examples of its use?",
    "What's the difference between inline and inline-block?",
    "What's the difference between a relative, fixed, absolute and statically positioned element?",
    "What existing CSS frameworks have you used locally, or in production? How would you change/improve them?",
    "Have you played around with the new CSS Flexbox or Grid specs?",
    "Can you explain the difference between coding a website to be responsive versus using a mobile-first strategy?",
    "How is responsive design different from adaptive design?",
    "Have you ever worked with retina graphics? If so, when and what techniques did you use?",
    "Is there any reason you'd want to use translate() instead of absolute positioning, or vice-versa? And why?",
  ],
  nodejs: [
    "What is Node.js and how does it work?",
    "Explain the event-driven architecture of Node.js.",
    "What is the role of the `package.json` file in a Node.js project?",
    "How do you manage dependencies in Node.js?",
    "What is the purpose of the `npm` command-line tool?",
    "How do you create and use modules in Node.js?",
    "What is the `require` function and how does it work?",
    "Explain the concept of middleware in Express.js.",
    "How do you handle asynchronous operations in Node.js?",
    "What are streams in Node.js and how are they used?",
    "What is the `eventEmitter` class and how is it used?",
    "How do you work with files and the file system in Node.js?",
    "What is the difference between `process.nextTick` and `setImmediate`?",
    "How do you handle errors and exceptions in Node.js?",
    "What is the purpose of the `global` object in Node.js?",
    "How do you use environment variables in Node.js?",
    "What is the `buffer` module and how is it used?",
    "How do you create an HTTP server with Node.js?",
    "What is the purpose of the `cluster` module?",
    "How do you implement authentication and authorization in a Node.js application?",
    "What are `promises` and `async/await` in Node.js?",
    "How do you work with databases in Node.js?",
    "What are the differences between SQL and NoSQL databases?",
    "How do you perform unit testing in Node.js?",
    "What is the purpose of the `dotenv` package?",
    "How do you handle concurrent requests in Node.js?",
    "What is the role of the `path` module?",
    "How do you implement logging in a Node.js application?",
    "What is the difference between `fs.readFile` and `fs.createReadStream`?",
    "How do you use `async` functions in Node.js?",
    "What are the best practices for securing a Node.js application?",
    "How do you implement caching in Node.js?",
    "What is the purpose of the `http` module?",
    "How do you use the `url` module in Node.js?",
    "What is the role of the `crypto` module?",
    "How do you handle file uploads in Node.js?",
    "What are the key differences between `Express.js` and `Koa.js`?",
    "How do you manage sessions and cookies in a Node.js application?",
    "What are the different types of Node.js processes and how do they work?",
    "How do you perform asynchronous operations with `streams`?",
    "What are the performance considerations for Node.js applications?",
    "How do you handle user input and form submissions in Node.js?",
    "What are `worker_threads` and how are they used?",
    "How do you deploy a Node.js application?",
    "What is the purpose of the `os` module?",
    "How do you use the `querystring` module?",
    "What are `subprocesses` and how do you manage them in Node.js?",
    "How do you use `WebSocket` with Node.js?",
    "What is the `pm2` tool and how is it used?",
    "How do you handle large files and streams efficiently in Node.js?",
    "What are some common performance optimization techniques in Node.js?",
  ],
  behavioral: [
    "Introduce yourself",
    "Why should we hire you?",
    "Where do you see yourself in 5 years?",
    "What are your strengths and weaknesses?",
    "Describe a challenging project you've worked on.",
    "How do you handle stress and pressure?",
    "Can you provide an example of a time you showed leadership?",
    "How do you prioritize your work?",
    "What motivates you?",
    "Describe a time when you had to work with a difficult team member.",
    "How do you handle feedback and criticism?",
    "What are your career goals?",
    "Can you explain a time when you had to learn something quickly?",
    "How do you stay current with industry trends?",
    "What are your hobbies and interests outside of work?",
    "Describe a time when you made a mistake and how you handled it.",
    "How do you approach problem-solving?",
    "Can you discuss a time when you had to adapt to change?",
    "What is your approach to setting and achieving goals?",
    "How do you handle conflicts in the workplace?",
    "Describe a successful project you led and its outcome.",
    "What is your process for handling multiple priorities?",
    "How do you ensure effective communication with your team?",
    "What are your expectations from your next job?",
    "Can you describe a time when you exceeded expectations?",
    "How do you manage your time effectively?",
    "What do you consider to be your greatest accomplishment?",
    "How do you handle failure or setbacks?",
    "Describe a situation where you had to work under tight deadlines.",
    "How do you approach team collaboration?",
    "What strategies do you use to stay organized?",
    "Can you give an example of how you solved a complex problem?",
    "How do you handle unexpected changes in your work environment?",
    "What skills do you bring to this role?",
    "How do you ensure quality in your work?",
    "Can you describe a time when you had to manage a project with limited resources?",
    "How do you balance work and personal life?",
    "What are your strategies for continuing professional development?",
    "How do you handle difficult conversations with colleagues or clients?",
    "What is your approach to learning and growth?",
    "Can you provide an example of how you contributed to a team success?",
    "How do you deal with conflicting priorities?",
    "What are your strategies for managing workload and deadlines?",
    "How do you stay motivated during challenging tasks?",
    "What role do you typically play in a team setting?",
    "How do you ensure that your work aligns with company goals?",
    "Can you discuss a time when you had to take a risk in your work?",
    "How do you handle changes in project scope or requirements?",
    "What are your strategies for effective decision-making?",
  ],
};
