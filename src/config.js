// src/config.js
export const config = {
  javascript: [
    "Explain the concept of hoisting in JavaScript",
    "What are the differences between JavaScript variables created using `let`, `var` or `const`?",
    "What is the difference between `==` and `===` in JavaScript?",
    "What is the event loop in JavaScript runtimes?",
    "Explain event delegation in JavaScript",
    "Explain how `this` works in JavaScript",
    "Describe the difference between a cookie, `sessionStorage` and `localStorage` in browsers",
    "Describe the difference between `<script>`, `<script async>` and `<script defer>`",
    "What's the difference between a JavaScript variable that is: `null`, `undefined` or undeclared?",
    "What's the difference between `.call` and `.apply` in JavaScript?",
    "Explain `Function.prototype.bind` in JavaScript",
    "What advantage is there for using the JavaScript arrow syntax for a method in a constructor?",
    "Explain how prototypal inheritance works in JavaScript",
    "Difference between: `function Person(){}`, `const person = Person()`, and `const person = new Person()` in JavaScript?",
    "Explain the differences on the usage of `foo` between `function foo() {}` and `var foo = function() {}` in JavaScript",
    "What's a typical use case for anonymous functions in JavaScript?",
    "What are the various ways to create objects in JavaScript?",
    "What is a closure in JavaScript, and how/why would you use one?",
    "What is the definition of a higher-order function in JavaScript?",
    "What are the differences between JavaScript ES2015 classes and ES5 function constructors?",
    "Describe event bubbling in JavaScript and browsers",
    "Describe event capturing in JavaScript and browsers",
    "What is the difference between `mouseenter` and `mouseover` event in JavaScript and browsers?",
    "What is `'use strict';` in JavaScript for?",
    "Explain the difference between synchronous and asynchronous functions in JavaScript",
    "What are the pros and cons of using Promises instead of callbacks in JavaScript?",
    "Explain AJAX in as much detail as possible",
    "What are the advantages and disadvantages of using AJAX?",
    "What are the differences between `XMLHttpRequest` and `fetch()` in JavaScript and browsers?",
    "How do you abort a web request using `AbortController` in JavaScript?",
    "What are JavaScript polyfills for?",
    "Why is extending built-in JavaScript objects not a good idea?",
    "Why is it, in general, a good idea to leave the global JavaScript scope of a website as-is and never touch it?",
    "Explain the differences between CommonJS modules and ES modules in JavaScript",
    "What are the various data types in JavaScript?",
    "What language constructs do you use for iterating over object properties and array items in JavaScript?",
    "What are the benefits of using spread syntax in JavaScript and how is it different from rest syntax?",
    "What are iterators and generators in JavaScript and what are they used for?",
    "Explain the difference between mutable and immutable objects in JavaScript",
    "What is the difference between a `Map` object and a plain object in JavaScript?",
    "What are the differences between `Map`/`Set` and `WeakMap`/`WeakSet` in JavaScript?",
    "Why might you want to create static class members in JavaScript?",
    "What are `Symbol`s used for in JavaScript?",
    "What are server-sent events?",
    "What are JavaScript object property flags and descriptors?",
    "What are JavaScript object getters and setters for?",
    "What are proxies in JavaScript used for?",
    "What tools and techniques do you use for debugging JavaScript code?",
    "What are workers in JavaScript used for?",
    "How does JavaScript garbage collection work?",
    "What are the various data types in JavaScript?",
    "How do you check the data type of a variable?",
    "What's the difference between a JavaScript variable that is: `null`, `undefined` or undeclared?",
    "What are the differences between JavaScript variables created using `let`, `var` or `const`?",
    "Why is it, in general, a good idea to leave the global JavaScript scope of a website as-is and never touch it?",
    "How do you convert a string to a number in JavaScript?",
    "What are template literals and how are they used?",
    "Explain the concept of tagged templates",
    "What is the spread operator and how is it used?",
    "What are `Symbol`s used for in JavaScript?",
    "What are proxies in JavaScript used for?",
    "Explain the concept of hoisting in JavaScript",
    "Explain the difference in hoisting between `var`, `let`, and `const`",
    "How does hoisting affect function declarations and expressions?",
    "What are the potential issues caused by hoisting?",
    "How can you avoid problems related to hoisting?",
    "What is the difference between `==` and `===` in JavaScript?",
    "What language constructs do you use for iterating over object properties and array items in JavaScript?",
    "What is the purpose of the `break` and `continue` statements?",
    "What is the ternary operator and how is it used?",
    "How do you access the index of an element in an array during iteration?",
    "What is the purpose of the `switch` statement?",
    "What are rest parameters and how are they used?",
    "Explain the concept of the spread operator and its uses",
    "What are the benefits of using spread syntax in JavaScript and how is it different from rest syntax?",
    "What are iterators and generators in JavaScript and what are they used for?",
    "Explain the differences on the usage of `foo` between `function foo() {}` and `var foo = function() {}` in JavaScript",
    "What is the difference between a parameter and an argument?",
    "Explain the concept of hoisting with regards to functions",
    "What's the difference between `.call` and `.apply` in JavaScript?",
    "Can you offer a use case for the new arrow => function syntax?",
    "Difference between: `function Person(){}`, `const person = Person()`, and `const person = new Person()` in JavaScript?",
    "What is the definition of a higher-order function in JavaScript?",
    "What are callback functions and how are they used?",
    "What's a typical use case for anonymous functions in JavaScript?",
    "What is recursion and how is it used in JavaScript?",
    "What are default parameters and how are they used?",
    "Explain why the following doesn't work as an IIFE: `function foo(){ }();`. What needs to be changed to properly make it an IIFE?",
    "What are the various ways to create objects in JavaScript?",
    "Explain the difference between dot notation and bracket notation for accessing object properties",
    "What are the different methods for iterating over an array?",
    "How do you add, remove, and update elements in an array?",
    "What are the different ways to copy an object or an array?",
    "Explain the difference between shallow copy and deep copy",
    "What are the advantages of using the spread operator with arrays and objects?",
    "How do you check if an object has a specific property?",
    "Explain the difference between mutable and immutable objects in JavaScript",
    "Explain the concept of destructuring assignment for objects and arrays",
    "What is `Object.freeze()` for?",
    "What is `Object.seal()` for?",
    "What is `Object.preventExtensions()` for?",
    "What are JavaScript object getters and setters for?",
    "What are JavaScript object property flags and descriptors?",
    "How do you reliably determine whether an object is empty?",
    "What is the event loop in JavaScript runtimes?",
    "Explain the difference between synchronous and asynchronous functions in JavaScript",
    "Explain the concept of a callback function in asynchronous operations",
    "What are Promises and how do they work?",
    "Explain the different states of a Promise",
    "What are the pros and cons of using Promises instead of callbacks in JavaScript?",
    "What is the use of `Promise.all()`",
    "How is `Promise.all()` different from `Promise.allSettled()`?",
    "What is async/await and how does it simplify asynchronous code?",
    "How do you handle errors in asynchronous operations?",
    "Explain the concept of a microtask queue",
    "What is the difference between `setTimeout()`, `setImmediate()`, and `process.nextTick()`?",
    "Explain how prototypal inheritance works in JavaScript",
    "What is the prototype chain and how does it work?",
    "Explain the difference between classical inheritance and prototypal inheritance",
    "Explain the concept of inheritance in ES2015 classes",
    "What is the purpose of the `new` keyword?",
    "How do you create a constructor function?",
    "What are the differences between JavaScript ES2015 classes and ES5 function constructors?",
    "What advantage is there for using the JavaScript arrow syntax for a method in a constructor?",
    "Why might you want to create static class members in JavaScript?",
    "What is a closure in JavaScript, and how/why would you use one?",
    "Explain the concept of lexical scoping",
    "Explain the concept of scope in JavaScript",
    "How can closures be used to create private variables?",
    "What are the potential pitfalls of using closures?",
    "Explain the difference between global scope, function scope, and block scope",
    "Explain how `this` works in JavaScript",
    "Explain `Function.prototype.bind` in JavaScript",
    "Explain the different ways the `this` keyword can be bound",
    "What are the common pitfalls of using the `this` keyword?",
    "Explain the concept of `this` binding in event handlers",
    "What is the DOM and how is it structured?",
    "What's the difference between an attribute and a property in the DOM?",
    "Explain the difference between `document.querySelector()` and `document.getElementById()`",
    "How do you add, remove, and modify HTML elements using JavaScript?",
    "What are event listeners and how are they used?",
    "Explain the event phases in a browser",
    "Describe event bubbling in JavaScript and browsers",
    "Describe event capturing in JavaScript and browsers",
    "Explain event delegation in JavaScript",
    "How do you prevent the default behavior of an event?",
    "What is the difference between `event.preventDefault()` and `event.stopPropagation()`?",
    "What is the difference between `mouseenter` and `mouseover` event in JavaScript and browsers?",
    "What is the difference between `innerHTML` and `textContent`?",
    "How do you manipulate CSS styles using JavaScript?",
    "Describe the difference between `<script>`, `<script async>` and `<script defer>`",
    "What is the difference between the Window object and the Document object?",
    "Describe the difference between a cookie, `sessionStorage` and `localStorage` in browsers",
    "How do you make an HTTP request using the Fetch API?",
    "What are the different ways to make an API call in JavaScript?",
    "Explain AJAX in as much detail as possible",
    "What are the advantages and disadvantages of using AJAX?",
    "What are the differences between `XMLHttpRequest` and `fetch()` in JavaScript and browsers?",
    "How do you abort a web request using `AbortController` in JavaScript?",
    "Explain how JSONP works (and how it's not really Ajax)",
    "What are workers in JavaScript used for?",
    "Explain the concept of the Web Socket API",
    "What are JavaScript polyfills for?",
    "How do you detect if JavaScript is disabled on a page?",
    "What is the `Intl` namespace object for?",
    "How do you validate form elements using the Constraint Validation API?",
    "How do you use `window.history` API?",
    "How do `<iframe>` on a page communicate?",
    "Difference between document `load` event and document `DOMContentLoaded` event?",
    "How do you redirect to a new page in JavaScript?",
    "How do you get the query string values of the current page in JavaScript?",
    "What are server-sent events?",
    "What are Progressive Web Applications (PWAs)?",
    "What are modules and why are they useful?",
    "Explain the differences between CommonJS modules and ES modules in JavaScript",
    "How do you import and export modules in JavaScript?",
    "What are the benefits of using a module bundler?",
    "Explain the concept of tree shaking in module bundling",
    "What are the metadata fields of a module?",
    "What do you think of AMD vs CommonJS?",
    "What are the different types of errors in JavaScript?",
    "How do you handle errors using `try...catch` blocks?",
    "What is the purpose of the `finally` block?",
    "How can you create custom error objects?",
    "Explain the concept of error propagation in JavaScript",
    "What is currying and how does it work?",
    "Explain the concept of partial application",
    "What are the benefits of using currying and partial application?",
    "Provide some examples of how currying and partial application can be used",
    "How do currying and partial application differ from each other?",
    "What are `Set`s and `Map`s and how are they used?",
    "What are the differences between `Map`/`Set` and `WeakMap`/`WeakSet` in JavaScript?",
    "How do you convert a `Set` to an array in JavaScript?",
    "What is the difference between a `Map` object and a plain object in JavaScript?",
    "How do `Set`s and `Map`s handle equality checks for objects?",
    "What are some common performance bottlenecks in JavaScript applications?",
    "Explain the concept of debouncing and throttling",
    "How can you optimize DOM manipulation for better performance?",
    "What are some techniques for reducing reflows and repaints?",
    "Explain the concept of lazy loading and how it can improve performance",
    "What are Web Workers and how can they be used to improve performance?",
    "Explain the concept of caching and how it can be used to improve performance",
    "What are some tools that can be used to measure and analyze JavaScript performance?",
    "How can you optimize network requests for better performance?",
    "What are the different types of testing in software development?",
    "Explain the difference between unit testing, integration testing, and end-to-end testing",
    "What are some popular JavaScript testing frameworks?",
    "How do you write unit tests for JavaScript code?",
    "Explain the concept of test-driven development (TDD)",
    "What are mocks and stubs and how are they used in testing?",
    "How can you test asynchronous code in JavaScript?",
    "What are some best practices for writing maintainable and effective tests in JavaScript?",
    "Explain the concept of code coverage and how it can be used to assess test quality",
    "What are some tools that can be used for JavaScript testing?",
    "What are design patterns and why are they useful?",
    "Explain the concept of the Singleton pattern",
    "What is the Factory pattern and how is it used?",
    "Explain the Observer pattern and its use cases",
    "What is the Module pattern and how does it help with encapsulation?",
    "Explain the concept of the Prototype pattern",
    "What is the Decorator pattern and how is it used?",
    "Explain the concept of the Strategy pattern",
    "What is the Command pattern and how is it used?",
    "Why is extending built-in JavaScript objects not a good idea?",
    "What is Cross-Site Scripting (XSS) and how can you prevent it?",
    "Explain the concept of Cross-Site Request Forgery (CSRF) and its mitigation techniques",
    "How can you prevent SQL injection vulnerabilities in JavaScript applications?",
    "What are some best practices for handling sensitive data in JavaScript?",
    "Explain the concept of Content Security Policy (CSP) and how it enhances security",
    "What are some common security headers and their purpose?",
    "How can you prevent clickjacking attacks?",
    "Explain the concept of input validation and its importance in security",
    "What are some tools and techniques for identifying security vulnerabilities in JavaScript code?",
    "How can you implement secure authentication and authorization in JavaScript applications?",
    "Explain the same-origin policy with regards to JavaScript",
    "What is `'use strict';` in JavaScript for?",
    "What tools and techniques do you use for debugging JavaScript code?",
    "How does JavaScript garbage collection work?",
    "Explain what a single page app is and how to make one SEO-friendly",
    "How can you share code between JavaScript files?",
    "How do you organize your code?",
    "What are some of the advantages/disadvantages of writing JavaScript code in a language that compiles to JavaScript?",
    "When would you use `document.write()`?",

    
  ],
  react: [
    "What are hooks in React?",
    "Explain the virtual DOM.",
    "What is the purpose of useState?",
    "What is useEffect and how is it used?",
    "What is a React component?",
    "How do you handle state in class components vs functional components?",
    "What are controlled and uncontrolled components?",
    "How do you manage component lifecycle in React?",
    "What is context and how is it used?",
    "Explain the useReducer hook.",
    "What are error boundaries?",
    "How do you optimize performance in React applications?",
    "What is React.memo and when should you use it?",
    "How does React handle events?",
    "What is the purpose of useRef?",
    "How do you implement routing in React?",
    "What is React.lazy and Suspense?",
    "How do you handle forms in React?",
    "What is the difference between useCallback and useMemo?",
    "What is the key prop and why is it important?",
    "How do you pass data between components?",
    "What are higher-order components (HOCs)?",
    "What is the purpose of React.StrictMode?",
    "How do you perform server-side rendering with React?",
    "What is React Router and how is it used?",
    "How do you handle side effects in React?",
    "What are the different lifecycle methods in class components?",
    "How do you use PropTypes in React?",
    "What is useContext and how is it used?",
    "How do you implement lazy loading in React?",
    "What is a functional component?",
    "How does React.createContext work?",
    "What are React Fragments and why are they useful?",
    "How do you manage global state in React?",
    "What is the purpose of useLayoutEffect?",
    "How do you test React components?",
    "What is ReactDOM.render?",
    "How do you use React.createPortal?",
    "What are some common performance issues in React and how do you fix them?",
    "How do you manage API calls in React?",
    "What is React Query?",
    "How do you use refs in functional components?",
    "What is the difference between useEffect and useLayoutEffect?",
    "How do you handle asynchronous operations in React?",
    "What are some best practices for React development?",
    "How do you implement authentication in a React application?",
    "What are React Suspense and Error Boundaries?",
  ],
  html: [
    "What are semantic HTML elements?",
    "Explain the box model.",
    "What is the purpose of the head tag?",
    "How do you include external CSS and JavaScript in an HTML document?",
    "What is the difference between div and span?",
    "How do you create a form in HTML?",
    "What is the canvas element and how is it used?",
    "How do you use HTML5 to build a responsive web page?",
    "What are HTML attributes and how are they used?",
    "What is the difference between ol and ul?",
    "How do you include images in HTML?",
    "What is the purpose of the meta tag?",
    "How do you create tables in HTML?",
    "What are the different types of input elements in HTML forms?",
    "What is the iframe tag used for?",
    "How do you create a link in HTML?",
    "What are HTML entities and how are they used?",
    "What is the header element and what is its purpose?",
    "How do you use the audio and video elements?",
    "What are ARIA roles and attributes?",
    "How do you use HTML5 APIs like localStorage and sessionStorage?",
    "What is the purpose of the footer tag?",
    "How do you use HTML to create a navigation menu?",
    "What is the section tag used for?",
    "How do you define document structure using HTML5?",
    "What are the new input types introduced in HTML5?",
    "How do you use the article and aside elements?",
    "What is the main element and why is it important?",
    "How do you use the mark tag?",
    "What are the benefits of using dl for definition lists?",
    "How do you embed Google Maps in HTML?",
    "What is the button element and how is it different from input type='button'?",
    "How do you create a responsive grid layout in HTML?",
    "What is the purpose of the noscript tag?",
    "How do you use the details and summary elements?",
    "What are the different ways to include CSS in HTML?",
    "How do you use the progress element?",
    "What is the datalist element and how is it used?",
    "How do you create and use custom data attributes in HTML?",
    "What is the role of the figure and figcaption elements?",
    "How do you handle form validation in HTML5?",
    "What are the differences between HTML and XHTML?",
    "How do you include metadata in an HTML document?",
    "What is the role of the svg element in HTML?",
    "How do you create a web page layout using HTML5 semantic elements?",
    "What are the new features in HTML5 that enhance multimedia support?",
  ],
  css: [
    "What is Flexbox?",
    "Explain CSS Grid.",
    "What is the CSS box model?",
    "How do you center elements in CSS?",
    "What are pseudo-classes and pseudo-elements?",
    "How do you use CSS animations and transitions?",
    "What are media queries and how are they used?",
    "What is the difference between class and id selectors?",
    "How do you use CSS variables (custom properties)?",
    "What is the purpose of the display property?",
    "How do you implement responsive design in CSS?",
    "What are CSS preprocessors and how do they work?",
    "What is the difference between absolute, relative, fixed, and sticky positioning?",
    "How do you create a grid layout with CSS Grid?",
    "What are CSS Flexbox properties and how are they used?",
    "How do you style form elements in CSS?",
    "What is the :root pseudo-class?",
    "How do you implement a responsive typography system?",
    "What is the purpose of the z-index property?",
    "How do you create CSS hover effects?",
    "What are CSS transitions and how do you use them?",
    "How do you use @keyframes for animations?",
    "What is the purpose of the opacity property?",
    "How do you use CSS to hide elements visually but keep them accessible to screen readers?",
    "What are CSS Grid areas and how are they used?",
    "How do you create multi-column layouts with CSS?",
    "What are CSS filters and how are they used?",
    "How do you use the calc() function in CSS?",
    "What is the box-sizing property and why is it important?",
    "How do you style HTML tables with CSS?",
    "What is the transform property and how is it used?",
    "How do you use the :nth-child selector?",
    "What are CSS specificity rules?",
    "How do you handle cross-browser compatibility issues in CSS?",
    "What are CSS custom properties and how are they different from preprocessor variables?",
    "How do you create a CSS grid-based layout?",
    "What is the difference between a block-level element and an inline element?",
    "How do you use CSS to create a sticky header?",
    "What is the role of the @media rule in responsive design?",
    "How do you use CSS to create accessible and user-friendly designs?",
    "What are CSS pseudo-elements and how are they used?",
    "How do you use the :focus and :active pseudo-classes?",
    "What is the purpose of the content property in CSS?",
    "How do you create a CSS-only dropdown menu?",
    "What is the purpose of the font-family property?",
    "How do you use CSS to create a print-friendly stylesheet?",
    "What are some best practices for writing maintainable CSS?",
  ],
  nodejs: [
    "What is Node.js and how does it work?",
    "Explain the event-driven architecture of Node.js.",
    "What is the role of the `package.json` file in a Node.js project?",
    "How do you manage dependencies in Node.js?",
    "What is the purpose of the `npm` command-line tool?",
    "How do you create and use modules in Node.js?",
    "What is the `require` function and how does it work?",
    "Explain the concept of middleware in Express.js.",
    "How do you handle asynchronous operations in Node.js?",
    "What are streams in Node.js and how are they used?",
    "What is the `eventEmitter` class and how is it used?",
    "How do you work with files and the file system in Node.js?",
    "What is the difference between `process.nextTick` and `setImmediate`?",
    "How do you handle errors and exceptions in Node.js?",
    "What is the purpose of the `global` object in Node.js?",
    "How do you use environment variables in Node.js?",
    "What is the `buffer` module and how is it used?",
    "How do you create an HTTP server with Node.js?",
    "What is the purpose of the `cluster` module?",
    "How do you implement authentication and authorization in a Node.js application?",
    "What are `promises` and `async/await` in Node.js?",
    "How do you work with databases in Node.js?",
    "What are the differences between SQL and NoSQL databases?",
    "How do you perform unit testing in Node.js?",
    "What is the purpose of the `dotenv` package?",
    "How do you handle concurrent requests in Node.js?",
    "What is the role of the `path` module?",
    "How do you implement logging in a Node.js application?",
    "What is the difference between `fs.readFile` and `fs.createReadStream`?",
    "How do you use `async` functions in Node.js?",
    "What are the best practices for securing a Node.js application?",
    "How do you implement caching in Node.js?",
    "What is the purpose of the `http` module?",
    "How do you use the `url` module in Node.js?",
    "What is the role of the `crypto` module?",
    "How do you handle file uploads in Node.js?",
    "What are the key differences between `Express.js` and `Koa.js`?",
    "How do you manage sessions and cookies in a Node.js application?",
    "What are the different types of Node.js processes and how do they work?",
    "How do you perform asynchronous operations with `streams`?",
    "What are the performance considerations for Node.js applications?",
    "How do you handle user input and form submissions in Node.js?",
    "What are `worker_threads` and how are they used?",
    "How do you deploy a Node.js application?",
    "What is the purpose of the `os` module?",
    "How do you use the `querystring` module?",
    "What are `subprocesses` and how do you manage them in Node.js?",
    "How do you use `WebSocket` with Node.js?",
    "What is the `pm2` tool and how is it used?",
    "How do you handle large files and streams efficiently in Node.js?",
    "What are some common performance optimization techniques in Node.js?",
  ],
  behavioral: [
    "Introduce yourself",
    "Why should we hire you?",
    "Where do you see yourself in 5 years?",
    "What are your strengths and weaknesses?",
    "Describe a challenging project you've worked on.",
    "How do you handle stress and pressure?",
    "Can you provide an example of a time you showed leadership?",
    "How do you prioritize your work?",
    "What motivates you?",
    "Describe a time when you had to work with a difficult team member.",
    "How do you handle feedback and criticism?",
    "What are your career goals?",
    "Can you explain a time when you had to learn something quickly?",
    "How do you stay current with industry trends?",
    "What are your hobbies and interests outside of work?",
    "Describe a time when you made a mistake and how you handled it.",
    "How do you approach problem-solving?",
    "Can you discuss a time when you had to adapt to change?",
    "What is your approach to setting and achieving goals?",
    "How do you handle conflicts in the workplace?",
    "Describe a successful project you led and its outcome.",
    "What is your process for handling multiple priorities?",
    "How do you ensure effective communication with your team?",
    "What are your expectations from your next job?",
    "Can you describe a time when you exceeded expectations?",
    "How do you manage your time effectively?",
    "What do you consider to be your greatest accomplishment?",
    "How do you handle failure or setbacks?",
    "Describe a situation where you had to work under tight deadlines.",
    "How do you approach team collaboration?",
    "What strategies do you use to stay organized?",
    "Can you give an example of how you solved a complex problem?",
    "How do you handle unexpected changes in your work environment?",
    "What skills do you bring to this role?",
    "How do you ensure quality in your work?",
    "Can you describe a time when you had to manage a project with limited resources?",
    "How do you balance work and personal life?",
    "What are your strategies for continuing professional development?",
    "How do you handle difficult conversations with colleagues or clients?",
    "What is your approach to learning and growth?",
    "Can you provide an example of how you contributed to a team success?",
    "How do you deal with conflicting priorities?",
    "What are your strategies for managing workload and deadlines?",
    "How do you stay motivated during challenging tasks?",
    "What role do you typically play in a team setting?",
    "How do you ensure that your work aligns with company goals?",
    "Can you discuss a time when you had to take a risk in your work?",
    "How do you handle changes in project scope or requirements?",
    "What are your strategies for effective decision-making?",
  ],
};
